%MatzJB 27/9 2015
%Homomorphic filter with GUI

%This version only views grayscale images (converts if color)

%Todo:
%* Add a 'preview mode' for very quick update of the image.
%* Close only the figures we create in quit_cb

global onoff %filter is on or off

onoff = 0; %filter is 'off'

close all
h_img = figure;
hold on

%--------------------------------------

set(h_img, 'Name', 'Homomorphic Filtering by Matz JB',...
    'NumberTitle', 'Off',...
    'Units', 'centimeters',...
    'Position', [12, 12, 13, 13],...
    'Tag','figure window',...
    'toolbar','figure',...
    'menubar', 'none');

Filem = uimenu(h_img, 'label', 'File');

alt(1) = uimenu(Filem, 'label', 'Open',...
    'callback', @openimg_cb,...
    'accelerator', 'O');

alt(2) = uimenu(Filem, 'label', 'Exit',...
    'callback', 'quit_cb',...
    'accelerator', 'Q');

%--------------------------------------

%dimensions of the slider/button(s)
height_slider = 0.5;
width_slider  = 5;

%anonymous function that returns the position and size of a slider/text
position_of_slider  = @(i) [1, 2+0.6*i, width_slider, height_slider];

im_data    = zeros(400, 600);
im_data    = im2double(im_data);

%handles
h_imshow   = imshow(im_data, []);
h_controls = figure;

set(h_controls, 'Resize', 'off');
set(h_controls, 'Name', 'Homomorphic Filtering', ...
    'NumberTitle', 'Off', ...
    'MenuBar', 'None', ...
    'Units', 'centimeters', ...
    'Position', [1, 1, 7, 7])

%--------------------------------------
t = -2; %vertical placement of uicontrol elements
h_toggle = uicontrol( ...
    'Style', 'pushbutton', ...
    'Units', 'centimeters', ...
    'Position', position_of_slider(t), ...
    'String', 'Turn filter On',...
    'Tag', 'Toggle', ...
    'UserData', 0,...
    'Callback', @toggle_cb);

%--------------------------------------
t = t+2;
h_sl_gl = uicontrol( ...
    'Style', 'slider', ...
    'Units', 'centimeters', ...
    'Position', position_of_slider(t), ...
    'Min', 0, ... % min value of slider
    'Max', 10, ... % max value
    'Value', 0, ... % initial value
    'Tag', 'slider_gamma_l', ...
    'Callback', @slider_cb);

t = t+1;
uicontrol('Style', 'text', ...
    'String', 'gamma_l', ...
    'Units', 'centimeters', ...
    'FontWeight', 'Bold',...
    'Position', position_of_slider(t))

%--------------------------------------
t = t+1;
h_sl_gh = uicontrol('Style', 'slider', ...
    'Units', 'centimeters', ...
    'Position', position_of_slider(t), ...
    'Min', 0, ... % min value of slider
    'Max', 10, ... % max value
    'Value', 1, ... % initial value
    'Tag', 'slider_gamma_h', ...
    'Callback', @slider_cb );

t = t+1;
uicontrol('Style', 'text', ...
    'String', 'gamma_h', ...
    'Units', 'centimeters', ...
    'FontWeight', 'Bold',...
    'Position', position_of_slider(t))

%----------------------------------------
t = t+1;
h_sl_c = uicontrol('Style', 'slider', ...
    'Units', 'centimeters', ...
    'Position', position_of_slider(t), ...
    'Min', 0, ... % min value of slider
    'Max', 5, ... % max value
    'Value', 0, ... % initial value
    'Tag', 'slider_c', ...
    'Callback', @slider_cb );

t = t+1;
uicontrol('Style', 'text', ...
    'String', 'c', ...
    'Units', 'centimeters', ...
    'FontWeight', 'Bold',...
    'Position', position_of_slider(t))

%----------------------------------------
t = t+1;
h_sl_d0 = uicontrol('Style', 'slider', ...
    'Units', 'centimeters', ...
    'Position', position_of_slider(t), ...
    'Min', 1, ... % min value of slider
    'Max', 300, ... % max value
    'Value', 1, ... % initial value
    'Tag', 'slider_D0', ...
    'Callback', @slider_cb );

t = t+1;
uicontrol('Style', 'text', ...
    'String', 'D0', ...
    'Units', 'centimeters', ...
    'FontWeight', 'Bold',...
    'Position', position_of_slider(t))

%----------------------------------------
%Store original image in 'userdata' of h_imshow, so we can access it and
%update it from different callback functions (openimg, slider_cb). Also, we
%store the handles to the image and the control GUI in each slider, so we
%can access the values of them in the callback functions (see files named *_cb.m).

set(h_imshow, 'userdata', im_data); %original image data stored in 'userdata'

setappdata(h_sl_gl, 'h_imshow',   h_imshow)
setappdata(h_sl_gl, 'h_controls', h_controls)

setappdata(h_sl_gh, 'h_imshow',   h_imshow)
setappdata(h_sl_gh, 'h_controls', h_controls)

setappdata(h_sl_c, 'h_imshow',   h_imshow)
setappdata(h_sl_c, 'h_controls', h_controls)

setappdata(h_sl_d0, 'h_imshow',   h_imshow)
setappdata(h_sl_d0, 'h_controls', h_controls)

%for the before/after toggle button, we have to pass the variables
setappdata(h_toggle, 'h_imshow',   h_imshow)
setappdata(h_toggle, 'h_controls', h_controls)

setappdata(h_img, 'h_imshow',   h_imshow)

%add handles to the open file callback
setappdata(alt(1), 'h_imshow',   h_imshow)
setappdata(alt(1), 'h_controls', h_controls)
